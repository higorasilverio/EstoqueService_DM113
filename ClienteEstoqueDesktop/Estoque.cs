//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Estoque.ServicoEstoque
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Produto", Namespace="http://schemas.datacontract.org/2004/07/Estoque")]
    public partial class Produto : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string DescricaoProdutoField;
        
        private int EstoqueProdutoField;
        
        private string NomeProdutoField;
        
        private string NumeroProdutoField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DescricaoProduto
        {
            get
            {
                return this.DescricaoProdutoField;
            }
            set
            {
                this.DescricaoProdutoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EstoqueProduto
        {
            get
            {
                return this.EstoqueProdutoField;
            }
            set
            {
                this.EstoqueProdutoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NomeProduto
        {
            get
            {
                return this.NomeProdutoField;
            }
            set
            {
                this.NomeProdutoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumeroProduto
        {
            get
            {
                return this.NumeroProdutoField;
            }
            set
            {
                this.NumeroProdutoField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Estoque.ServicoEstoque.IServicoEstoque")]
    public interface IServicoEstoque
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicoEstoque/ListarProdutos", ReplyAction="http://tempuri.org/IServicoEstoque/ListarProdutosResponse")]
        string[] ListarProdutos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicoEstoque/ListarProdutos", ReplyAction="http://tempuri.org/IServicoEstoque/ListarProdutosResponse")]
        System.Threading.Tasks.Task<string[]> ListarProdutosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicoEstoque/IncluirProduto", ReplyAction="http://tempuri.org/IServicoEstoque/IncluirProdutoResponse")]
        bool IncluirProduto(Estoque.ServicoEstoque.Produto produto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicoEstoque/IncluirProduto", ReplyAction="http://tempuri.org/IServicoEstoque/IncluirProdutoResponse")]
        System.Threading.Tasks.Task<bool> IncluirProdutoAsync(Estoque.ServicoEstoque.Produto produto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicoEstoque/RemoverProduto", ReplyAction="http://tempuri.org/IServicoEstoque/RemoverProdutoResponse")]
        bool RemoverProduto(string numeroProduto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicoEstoque/RemoverProduto", ReplyAction="http://tempuri.org/IServicoEstoque/RemoverProdutoResponse")]
        System.Threading.Tasks.Task<bool> RemoverProdutoAsync(string numeroProduto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicoEstoque/ConsultarEstoque", ReplyAction="http://tempuri.org/IServicoEstoque/ConsultarEstoqueResponse")]
        int ConsultarEstoque(string numeroProduto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicoEstoque/ConsultarEstoque", ReplyAction="http://tempuri.org/IServicoEstoque/ConsultarEstoqueResponse")]
        System.Threading.Tasks.Task<int> ConsultarEstoqueAsync(string numeroProduto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicoEstoque/AdicionarEstoque", ReplyAction="http://tempuri.org/IServicoEstoque/AdicionarEstoqueResponse")]
        bool AdicionarEstoque(string numeroProduto, int quantidade);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicoEstoque/AdicionarEstoque", ReplyAction="http://tempuri.org/IServicoEstoque/AdicionarEstoqueResponse")]
        System.Threading.Tasks.Task<bool> AdicionarEstoqueAsync(string numeroProduto, int quantidade);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicoEstoque/RemoverEstoque", ReplyAction="http://tempuri.org/IServicoEstoque/RemoverEstoqueResponse")]
        bool RemoverEstoque(string numeroProduto, int quantidade);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicoEstoque/RemoverEstoque", ReplyAction="http://tempuri.org/IServicoEstoque/RemoverEstoqueResponse")]
        System.Threading.Tasks.Task<bool> RemoverEstoqueAsync(string numeroProduto, int quantidade);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicoEstoque/VerProduto", ReplyAction="http://tempuri.org/IServicoEstoque/VerProdutoResponse")]
        Estoque.ServicoEstoque.Produto VerProduto(string numeroProduto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicoEstoque/VerProduto", ReplyAction="http://tempuri.org/IServicoEstoque/VerProdutoResponse")]
        System.Threading.Tasks.Task<Estoque.ServicoEstoque.Produto> VerProdutoAsync(string numeroProduto);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicoEstoqueChannel : Estoque.ServicoEstoque.IServicoEstoque, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicoEstoqueClient : System.ServiceModel.ClientBase<Estoque.ServicoEstoque.IServicoEstoque>, Estoque.ServicoEstoque.IServicoEstoque
    {
        
        public ServicoEstoqueClient()
        {
        }
        
        public ServicoEstoqueClient(string endpointConfigurationName) : 
                base(endpointConfigurationName)
        {
        }
        
        public ServicoEstoqueClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public ServicoEstoqueClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public ServicoEstoqueClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public string[] ListarProdutos()
        {
            return base.Channel.ListarProdutos();
        }
        
        public System.Threading.Tasks.Task<string[]> ListarProdutosAsync()
        {
            return base.Channel.ListarProdutosAsync();
        }
        
        public bool IncluirProduto(Estoque.ServicoEstoque.Produto produto)
        {
            return base.Channel.IncluirProduto(produto);
        }
        
        public System.Threading.Tasks.Task<bool> IncluirProdutoAsync(Estoque.ServicoEstoque.Produto produto)
        {
            return base.Channel.IncluirProdutoAsync(produto);
        }
        
        public bool RemoverProduto(string numeroProduto)
        {
            return base.Channel.RemoverProduto(numeroProduto);
        }
        
        public System.Threading.Tasks.Task<bool> RemoverProdutoAsync(string numeroProduto)
        {
            return base.Channel.RemoverProdutoAsync(numeroProduto);
        }
        
        public int ConsultarEstoque(string numeroProduto)
        {
            return base.Channel.ConsultarEstoque(numeroProduto);
        }
        
        public System.Threading.Tasks.Task<int> ConsultarEstoqueAsync(string numeroProduto)
        {
            return base.Channel.ConsultarEstoqueAsync(numeroProduto);
        }
        
        public bool AdicionarEstoque(string numeroProduto, int quantidade)
        {
            return base.Channel.AdicionarEstoque(numeroProduto, quantidade);
        }
        
        public System.Threading.Tasks.Task<bool> AdicionarEstoqueAsync(string numeroProduto, int quantidade)
        {
            return base.Channel.AdicionarEstoqueAsync(numeroProduto, quantidade);
        }
        
        public bool RemoverEstoque(string numeroProduto, int quantidade)
        {
            return base.Channel.RemoverEstoque(numeroProduto, quantidade);
        }
        
        public System.Threading.Tasks.Task<bool> RemoverEstoqueAsync(string numeroProduto, int quantidade)
        {
            return base.Channel.RemoverEstoqueAsync(numeroProduto, quantidade);
        }
        
        public Estoque.ServicoEstoque.Produto VerProduto(string numeroProduto)
        {
            return base.Channel.VerProduto(numeroProduto);
        }
        
        public System.Threading.Tasks.Task<Estoque.ServicoEstoque.Produto> VerProdutoAsync(string numeroProduto)
        {
            return base.Channel.VerProdutoAsync(numeroProduto);
        }
    }
}
